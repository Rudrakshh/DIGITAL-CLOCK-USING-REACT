{"version":3,"sources":["images/timeclock.jpg","App.js","reportWebVitals.js","index.js"],"names":["Clock","ChangeTime","Today","Date","hours","getHours","min","getMinutes","seconds","getSeconds","setState","second","minute","hour","state","setInterval","this","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,I,MCkDAA,E,kDA5Cb,aAAe,IAAD,uBACZ,gBAYFC,WAAW,WAET,IAAIC,EAAM,IAAIC,KACVC,EAAMF,EAAMG,WACZC,EAAIJ,EAAMK,aACVC,EAAQN,EAAMO,aAClB,EAAKC,SAAS,CAAEC,OAAQH,EACtBI,OAAON,EACPO,KAAKT,KAnBP,IAAIF,EAAM,IAAIC,KACVC,EAAMF,EAAMG,WACZC,EAAIJ,EAAMK,aACVC,EAAQN,EAAMO,aALN,OAMZ,EAAKK,MAAQ,CACXH,OAAQH,EACRI,OAAON,EACPO,KAAKT,GATK,E,0CAwBd,WAEE,OADAW,YAAYC,KAAKf,WAAW,KAE1B,sBAAKgB,UAAU,MAAf,UACE,qDAEA,qBAAKA,UAAU,OAAf,SAGA,gCACI,+BAAI,+BAAOD,KAAKF,MAAMD,OAAtB,OAAwC,+BAAI,+BAAOG,KAAKF,MAAMF,SAAtB,OAA0C,6BAAI,+BAAOI,KAAKF,MAAMH,uB,GAnChGO,IAAMC,WCOXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79c1d30e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/timeclock.abf85e5b.jpg\";","\nimport React from 'react';\nimport './App.css';\nimport image from './images/timeclock.jpg'\n\nclass Clock extends React.Component {\n  constructor() {\n    super();\n    var Today=new Date();\n    var hours=Today.getHours()\n    var min=Today.getMinutes()\n    var seconds=Today.getSeconds()\n    this.state = {\n      second: seconds,\n      minute:min,\n      hour:hours,\n    };\n  }\n\n  ChangeTime=()=>\n  {\n    var Today=new Date();\n    var hours=Today.getHours()\n    var min=Today.getMinutes()\n    var seconds=Today.getSeconds()\n    this.setState({ second: seconds,\n      minute:min,\n      hour:hours,})\n  }\n\n  render() {\n    setInterval(this.ChangeTime,1000)\n    return (\n      <div className=\"top\">\n        <h2>DIGITAL CLOCK REACT</h2>\n\n        <div className=\"main\">\n\n          \n        <div>\n            <h1><span>{this.state.hour}</span>:</h1><h1><span>{this.state.minute}</span>:</h1><h1><span>{this.state.second}</span></h1>\n        </div>\n\n        \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Clock from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Clock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}